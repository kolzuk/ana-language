fun partition(array arr, integer l, integer r) -> integer {
   integer v = arr[(l + r) / 2];
   integer i = l;
   integer j = r;
   while (i <= j) {
     while (arr[i] < v) {
       i = i + 1;
     }
     while (arr[j] > v) {
       j = j - 1;
     }
     if (i >= j) {
        break;
     }

     integer tmp = arr[i];
     arr[i] = arr[j];
     arr[j] = tmp;
     i = i + 1;
     j = j - 1;
   }

   return j;
}

fun quicksort(array arr, integer l, integer r) {
    if (l < r) {
        integer q = partition(arr, l, r);
        quicksort(arr, l, q);
        quicksort(arr, q + 1, r);
    }
}

fun printArray(array arr, integer size) {
    for (integer i = 0; i < size; i = i + 1) {
        print arr[i];
    }
}

fun generateArray(array arr, integer size) {
    for (integer i = 0; i < size; i = i + 1) {
        arr[i] = size - i;
    }
}

fun main() -> integer {
    array a = new array[10000];
    generateArray(a, 10000);
    quicksort(a, 0, 9999);
    printArray(a, 10000);
    return 0;
}